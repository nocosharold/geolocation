{"version":3,"sources":["Components/ErrorComponent.js","index.js"],"names":["ErrorComponent","this","props","error","latitude","longitude","React","Component","App","state","random","window","navigator","geolocation","getCurrentPosition","position","setState","coords","err","message","ReactDOM","render","document","querySelector"],"mappings":"yLAeeA,E,4JAXX,WACI,OACI,qCACI,iDAAoBC,KAAKC,MAAMC,SAC/B,2CAAeF,KAAKC,MAAME,YAC1B,4CAAgBH,KAAKC,MAAMG,oB,GAPdC,IAAMC,WCC7BC,E,kDAGF,WAAYN,GAAQ,IAAD,8BAEf,cAAMA,IAKDO,MAAQ,CAACL,SAAU,KAAKC,UAAW,KAAKF,MAAO,KAAKO,OAAO,QAEhEC,OAAOC,UAAUC,YAAYC,oBACzB,SAACC,GAEG,EAAKC,SAAS,CAAEZ,SAAUW,EAASE,OAAOb,SAAUC,UAAWU,EAASE,OAAOZ,eAGnF,SAACa,GACG,EAAKF,SAAS,CAACb,MAAMe,EAAIC,aAhBlB,E,0CAqBnB,WACI,OACI,gCACI,6CACA,cAAC,EAAD,CAAgBhB,MAAOF,KAAKQ,MAAMN,MAAOC,SAAUH,KAAKQ,MAAML,SAAWC,UAAWJ,KAAKQ,MAAMJ,mB,GA5B7FC,IAAMC,WAkCxBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.19d18aaa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ErrorComponent extends React.Component{\r\n    \r\n    render(){\r\n        return(\r\n            <>\r\n                <h1>Error Handling {this.props.error}</h1>\r\n                <p>Latitude: { this.props.latitude }</p>\r\n                <p>Longitude: { this.props.longitude }</p>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorComponent;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ErrorComponent from './Components/ErrorComponent';\nclass App extends React.Component {\n    // Just a JS method, not specific to React.\n    // It's going to be automatically called with the props object.\n    constructor(props) {\n        // REQUIRED when using constructor\n        super(props);\n        // This is our state object\n        /* This will eventually contain some different \n            properties that are relevant to our app. \n        */\n        this.state = {latitude: null,longitude: null,error: null,random:\"ivan\"};\n        // this.state = {longitude: null};\n        window.navigator.geolocation.getCurrentPosition(\n            (position)  => {\n                // to update our state object, we call setState\n                this.setState({ latitude: position.coords.latitude, longitude: position.coords.longitude });\n                // this.setState({ longitude: position.coords.longitude });\n            },\n            (err)       => {\n                this.setState({error:err.message})\n            }\n        );\n    }\n    // A required React method when using class-based component.\n    render() {\n        return (\n            <div>\n                <p>edit mo ulit</p>\n                <ErrorComponent error={this.state.error} latitude={this.state.latitude}  longitude={this.state.longitude}/>\n                \n            </div>\n        );\n    };\n};\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}